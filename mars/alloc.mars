module alloc;

def AllocMode = enum u8 {
    Alloc,
    Realloc,
    Free,
};

def AllocatorFun = fun (size, align: uint, mem: ^mut, mode: AllocMode, data: ^mut): ^mut;

def Allocator = struct {
    fn: AllocatorFun,
    data: ^mut,
};


fun malloc(allocator: ^mut Allocator, size, align: uint): ^mut {
    return allocator.fn(size, align, null, .Alloc, allocator);
}
fun mfree(allocator: ^mut Allocator, mem: ^let) {
    return allocator.fn(size, align, null, .Free, allocator);
}
fun mrealloc(allocator: ^mut Allocator, mem: ^let, new_size: uint): ^mut {
    return allocator.fn(size, 0, mem, .Realloc, allocator); // alignment is taken from mem's region alignment
}