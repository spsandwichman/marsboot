notes on structs and unions:

When accessing a struct, union, or array through a reference, 
only the memory containing the data needed by the expression is accessed.
The language guarantees this.

if you have
    def Foo = union {
        a: int,
        b: u8,
    };
and
    let f: ^let Foo = ...;
the expressions
    f^.b or f.b 
will only access the memory that holds the field b. 
if f points to a region of memory only one byte long, 
this access will still be valid.