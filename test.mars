module test;

// linked list node
def LLNode = struct {
    data: int,
    next: ^mut LLNode,
    prev: ^mut LLNode,
};

fun new_node(data: int): ^mut LLNode {
    return null;
}

fun append_back(list, new: ^mut LLNode) {
    if list == null || new == null {
        return;
    }
    mut end = list;
    while end.prev != null {
        end = end.prev;
    }
    end.prev = new;
    new.next = end;
}

fun insert_before(node, new: ^mut LLNode) {
    new.prev = node.prev;
    new.next = node;
    node.prev.next = new;
    node.prev = new;
}

fun insert_after(node, new: ^mut LLNode) {
    new.next = node.next;
    new.prev = node;
    node.next.prev = new;
    node.next = new;
}